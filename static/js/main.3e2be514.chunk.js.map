{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","handleAdd","newSelectedGood","setState","clearSelectedGood","removeFromSelected","goodToRemove","filter","good","this","className","join","length","type","onClick","map","isGoodSelected","includes","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAKMA,EAA4B,CAChC,yBACA,sBACA,oBACA,yBACA,qBACA,qBACA,oBACA,qBACA,mBACA,uBAOIC,E,4MACJC,MAAe,CACbC,aAAc,CAAC,qB,EAGjBC,UAAY,SAACC,GACX,EAAKC,UAAS,SAACJ,GACb,MAAO,CACLC,aAAa,GAAD,mBAAMD,EAAMC,cAAZ,CAA0BE,S,EAK5CE,kBAAoB,WAClB,EAAKD,SAAS,CACZH,aAAc,M,EAIlBK,mBAAqB,SAACC,GACpB,EAAKH,UAAS,SAACJ,GACb,MAAO,CACLC,aAAcD,EAAMC,aAAaO,QAC/B,SAACC,GAAD,OAAUA,IAASF,U,4CAM3B,WAAU,IAAD,OACCN,EAAiBS,KAAKV,MAAtBC,aAER,OACE,sBAAKU,UAAU,MAAf,UACE,sBAAKA,UAAU,eAAf,UACE,gDAEE,sBAAMA,UAAU,8BAAhB,SACGV,EAAaW,KAAK,UAGtBX,EAAaY,OAAS,GACrB,wBACEF,UAAU,iBACVG,KAAK,SACLC,QAASL,KAAKL,kBAHhB,kBAUJ,oBAAIM,UAAU,YAAd,SACGb,EAAgBkB,KAAI,SAACP,GACpB,IAAMQ,EAAiBhB,EAAaiB,SAAST,GAE7C,OACE,sBAAKE,UAAU,qBAAf,UACE,oBAEEA,UAAWQ,IACT,kBACA,CACE,4BAA6BF,IALnC,SASGR,GARIA,IAULQ,GACA,wBACEN,UAAU,eACVG,KAAK,SACLC,QAAS,kBAAM,EAAKb,UAAUO,IAHhC,iBAQDQ,GACC,wBACEN,UAAU,iBACVG,KAAK,SACLC,QAAS,kBAAM,EAAKT,mBAAmBG,IAHzC,8B,GA/EAW,IAAMC,WAgGTtB,ICnHfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3e2be514.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings ü•ü',\n  'Carrot ü•ï',\n  'Eggs üç≥',\n  'Ice cream üç¶',\n  'Apple üçè',\n  'Bread üçû',\n  'Fish üêü',\n  'Honey üçØ',\n  'Jam üçÆ',\n  'Garlic üßÑ',\n];\n\ntype State = {\n  selectedGood: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGood: ['Jam üçÆ'],\n  };\n\n  handleAdd = (newSelectedGood: string) => {\n    this.setState((state) => {\n      return {\n        selectedGood: [...state.selectedGood, newSelectedGood],\n      };\n    });\n  };\n\n  clearSelectedGood = () => {\n    this.setState({\n      selectedGood: [],\n    });\n  };\n\n  removeFromSelected = (goodToRemove: string) => {\n    this.setState((state) => {\n      return {\n        selectedGood: state.selectedGood.filter(\n          (good) => good !== goodToRemove,\n        ),\n      };\n    });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"GoodsDisplay\">\n          <h1>\n            Selected good:\n            <span className=\"GoodsDisplay__selected-item\">\n              {selectedGood.join(' ')}\n            </span>\n          </h1>\n          {selectedGood.length > 0 && (\n            <button\n              className=\"Btn Btn--clear\"\n              type=\"button\"\n              onClick={this.clearSelectedGood}\n            >\n              X\n            </button>\n          )}\n        </div>\n\n        <ul className=\"GoodsList\">\n          {goodsFromServer.map((good) => {\n            const isGoodSelected = selectedGood.includes(good);\n\n            return (\n              <div className=\"GoodsList__content\">\n                <li\n                  key={good}\n                  className={classNames(\n                    'GoodsList__item',\n                    {\n                      'GoodsList__item--selected': isGoodSelected,\n                    },\n                  )}\n                >\n                  {good}\n                </li>\n                {!isGoodSelected && (\n                  <button\n                    className=\"Btn Btn--add\"\n                    type=\"button\"\n                    onClick={() => this.handleAdd(good)}\n                  >\n                    Add\n                  </button>\n                )}\n                {isGoodSelected && (\n                  <button\n                    className=\"Btn Btn--clear\"\n                    type=\"button\"\n                    onClick={() => this.removeFromSelected(good)}\n                  >\n                    X\n                  </button>\n                )}\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}